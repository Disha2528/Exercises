package com.springboot.dynamoDB.ExpenseTracker.Entity;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.springboot.dynamoDB.ExpenseTracker.Util.LocalDateTimeConverter;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.format.annotation.DateTimeFormat;

import java.time.LocalDateTime;

@Data
@AllArgsConstructor
@NoArgsConstructor
@DynamoDBTable(tableName = "Transaction")
public class Transaction {

    @DynamoDBHashKey(attributeName = "transactionId") //partition key
    @DynamoDBAutoGeneratedKey
    private String transactionId;

    @NotBlank(message="User Id cannot be blank")
    @DynamoDBIndexHashKey(globalSecondaryIndexName = "userId-date-index") //GSI partition key
    private String userId;

    @DynamoDBAttribute(attributeName = "amount")
    private double amount;

    @NotBlank(message = "Type cannot be blank")
    @DynamoDBAttribute(attributeName = "type")
    @Pattern(regexp = "income|expense", message = "Type must be 'income' or 'expense'")
    private String type;

    @NotNull(message = "Date cannot be Null")
    @DynamoDBTypeConverted(converter = LocalDateTimeConverter.class) //GSI sort Key
    @DynamoDBIndexRangeKey(globalSecondaryIndexName = "userId-date-index")
    private LocalDateTime date;

    @NotBlank(message = "Description cannot be empty")
    @DynamoDBAttribute(attributeName = "description")
    private String description;

    @NotBlank(message = "Category cannot be empty")
    @DynamoDBAttribute(attributeName = "category")
    private String category;

}
